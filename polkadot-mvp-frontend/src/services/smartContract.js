import { ApiPromise, WsProvider } from '@polkadot/api';
import { web3Enable, web3Accounts, web3FromSource } from '@polkadot/extension-dapp';
import metadata from './work_contract.json'; // Place your .contract file in services and rename to .json

const CONTRACT_ADDRESS = {"source":{"hash":"0xf70f3bf2edfa0e5e93335e3b40d3f2952c0f83b69e3aa3770f6dbe647bbcd699","language":"ink! 4.3.0","compiler":"rustc 1.88.0-nightly","wasm":"0x0061736d0100000001300960027f7f0060047f7f7f7f017f60037f7f7f0060017f0060000060037e7e7f006000017f60027f7f017f60017f017f02940108057365616c310b6765745f73746f726167650001057365616c301176616c75655f7472616e736665727265640000057365616c3005696e7075740000057365616c300663616c6c65720000057365616c30087472616e736665720001057365616c320b7365745f73746f726167650001057365616c300b7365616c5f72657475726e000203656e76066d656d6f72790201021003100f0200020503000306070800030004040608017f01418080040b0711020463616c6c0014066465706c6f7900150ace130f2c01017f037f2002200346047f200005200020036a200120036a2d00003a0000200341016a21030c010b0b1a0b0a0020012000412010090b4201027f02402000280208220320026a22042003490d00200420036b200247200420002802044b720d00200028020020036a200120021007200020043602080f0b000b2a01017f230041106b2203240020032001370308200320003703002002200341101009200341106a24000b2601017f230041106b220124002001410036020c20002001410c6a41041009200141106a24000b2601017f230041106b22022400200220003a000f20012002410f6a41011009200241106a24000b6d01017f230041106b2201240020014180800136020c418080042001410c6a1003200041818004290000370001200041096a41898004290000370000200041116a41918004290000370000200041186a419880042900003700002000418080042d00003a0000200141106a24000b4d02017f027e230041206b2200240020004200370308200042003703002000411036021c20002000411c6a10012000290308210120002903002102200041206a2400410541042001200284501b0b4601037f027f41202102034041002002450d011a200241016b210220012d0000210320002d00002104200141016a2101200041016a210020032004460d000b200420036b0b450b4701017f4101410220002802042201047f2000200141016b36020420002000280200220041016a36020020002d00000520000b41ff017122004101461b410020001b410220011b0b3c01027f027f200145044041808004210141010c010b410121024180800441013a000041818004210141020b2103200120023a0000200020031013000bb60101047f230041106b22012400200142808001370208200141808004360204200141046a100b024020012802082202200128020c2203490d00200128020421042001410036020c2001200220036b3602082001200320046a3602042000200141046a22021008200041206a20021008200029034020002903482002100a20002d00502002100c20002d00512002100c200128020c220020012802084b0d00200420032001280204200010051a200141106a24000f0b000b0d0020004180800420011006000be40a020a7f027e230041c0026b22002400024002400240100e41ff01714105470d002000418080013602a00141808004200041a0016a100220002802a0012201418180014f0d0020014104490d0141808004280200220341187621012003411076210220034108762104027f0240200341ff017122034107470440200341c801460d01200441ff0171411147200241ff01714195014772200141f4014772200341840147720d0441000c020b200441ff0171220341e301470440200141e10147200241ff017141d2014772200341c00047720d0441010c020b200141df0147200241ff017141b80147720d0341020c010b200441ff017141d60147200241ff0171410f4772200141a00147720d0241030b21052000428080013702a4012000418080043602a001200041a0016a100b20002802a401220320002802a8012201490d0020002802a00121022000200320016b22033602a00120022001200120026a2201200041a0016a100020002802a001220220034b72200241607141204620024120497272200241707141c00046720d0020012d000021062000200241d0006b3602a4012000200141d0006a3602a0012001290048210a2001290040210b200041a0016a101041ff017122034102460d00200041a0016a101041ff017122044102460d0020004197026a200141016a220241176a29000037000020004190026a200241106a29000037030020004188026a200241086a290000370300200041a7026a200141206a220141086a2207290000370000200041af026a200141106a2208290000370000200041b7026a200141186a220929000037000020002002290000370380022000200129000037009f02200020063a0000200041017220004180026a413f10072000200a3703482000200b370340200020043a0051200020033a00500240024002400240200541016b0e03010203000b230041206b220124002001100d2001200041206a100f450440000b200041013a0050200141206a24000c050b230041206b220124002001100d0240024020012000100f450d0020002d0050450d00200041013a00512000290348210a2000290340210b200142808001370204200141808004360200200041206a200110082001280204220420012802082202490d0020012802002103200141003602082001200420026b3602042001200220036a360200200b200a2001100a2001280208220420012802044b0d00200320022001280200200410040d00200141206a24000c010b000b0c040b200020043a00a201200020033a00a101200041003a00a001230041106b220124002001418080013602082001418080043602040240200041a0016a22002d00004101460440418080044181023b0100410221000c010b2001410136020c4180800441003a000020002d0001200141046a2202100c20002d00022002100c200128020c220041818001490d00000b410020001013000b20004198016a200929000037030020004190016a200829000037030020004188016a2007290000370300200041f0006a200041106a290300370300200041f8006a200041186a29030037030020002000290300370360200020002903083703682000200129000037038001200041b0016a200041e0006a41c00010072000200a3703f8012000200b3703f001200041003602a001230041106b220124002001418080013602082001418080043602040240200041a0016a22002802004101460440418080044181023b0100410221000c010b2001410136020c4180800441003a0000200041106a200141046a22021008200041306a20021008200029035020002903582002100a200128020c220041818001490d00000b410020001013000b000b410141011011000b20001012410041001011000ba30202047f027e23004180016b2200240002400240100e41ff01714105470d00200041808001360200418080042000100220002802002201418180014f0d0020014104490d0141808004280200419bddf6f40547200141046b41204972200141246b410f4d720d01200041106a220141948004290200370300200041186a2202419c80042902003703002000418480042902003703002000418c800429020037030841a48004290200210441ac80042902002105200041206a2203100d200041d8006a2002290300370300200041d0006a2001290300370300200041c8006a20002903083703002000200537036820002004370360200041003b017020002000290300370340200310124180800441003b0100410041021013000b000b410141011011000b","build_info":{"build_mode":"Release","cargo_contract_version":"3.2.0","rust_toolchain":"nightly-x86_64-pc-windows-msvc","wasm_opt_settings":{"keep_debug_symbols":false,"optimization_passes":"Z"}}},"contract":{"name":"work_contract","version":"0.1.0","authors":["Name"]},"spec":{"constructors":[{"args":[{"label":"employee","type":{"displayName":["AccountId"],"type":0}},{"label":"amount","type":{"displayName":["Balance"],"type":3}}],"default":false,"docs":[],"label":"new","payable":false,"returnType":{"displayName":["ink_primitives","ConstructorResult"],"type":5},"selector":"0x9bae9d5e"}],"docs":[],"environment":{"accountId":{"displayName":["AccountId"],"type":0},"balance":{"displayName":["Balance"],"type":3},"blockNumber":{"displayName":["BlockNumber"],"type":14},"chainExtension":{"displayName":["ChainExtension"],"type":15},"hash":{"displayName":["Hash"],"type":12},"maxEventTopics":4,"timestamp":{"displayName":["Timestamp"],"type":13}},"events":[],"lang_error":{"displayName":["ink","LangError"],"type":7},"messages":[{"args":[],"default":false,"docs":[],"label":"accept","mutates":true,"payable":false,"returnType":{"displayName":["ink","MessageResult"],"type":5},"selector":"0x841195f4"},{"args":[],"default":false,"docs":[],"label":"complete","mutates":true,"payable":false,"returnType":{"displayName":["ink","MessageResult"],"type":5},"selector":"0x0740d2e1"},{"args":[],"default":false,"docs":[],"label":"get_status","mutates":false,"payable":false,"returnType":{"displayName":["ink","MessageResult"],"type":8},"selector":"0x07e3b8df"},{"args":[],"default":false,"docs":[],"label":"get_parties","mutates":false,"payable":false,"returnType":{"displayName":["ink","MessageResult"],"type":10},"selector":"0xc8d60fa0"}]},"storage":{"root":{"layout":{"struct":{"fields":[{"layout":{"leaf":{"key":"0x00000000","ty":0}},"name":"employer"},{"layout":{"leaf":{"key":"0x00000000","ty":0}},"name":"employee"},{"layout":{"leaf":{"key":"0x00000000","ty":3}},"name":"amount"},{"layout":{"leaf":{"key":"0x00000000","ty":4}},"name":"accepted"},{"layout":{"leaf":{"key":"0x00000000","ty":4}},"name":"completed"}],"name":"WorkContract"}},"root_key":"0x00000000"}},"types":[{"id":0,"type":{"def":{"composite":{"fields":[{"type":1,"typeName":"[u8; 32]"}]}},"path":["ink_primitives","types","AccountId"]}},{"id":1,"type":{"def":{"array":{"len":32,"type":2}}}},{"id":2,"type":{"def":{"primitive":"u8"}}},{"id":3,"type":{"def":{"primitive":"u128"}}},{"id":4,"type":{"def":{"primitive":"bool"}}},{"id":5,"type":{"def":{"variant":{"variants":[{"fields":[{"type":6}],"index":0,"name":"Ok"},{"fields":[{"type":7}],"index":1,"name":"Err"}]}},"params":[{"name":"T","type":6},{"name":"E","type":7}],"path":["Result"]}},{"id":6,"type":{"def":{"tuple":[]}}},{"id":7,"type":{"def":{"variant":{"variants":[{"index":1,"name":"CouldNotReadInput"}]}},"path":["ink_primitives","LangError"]}},{"id":8,"type":{"def":{"variant":{"variants":[{"fields":[{"type":9}],"index":0,"name":"Ok"},{"fields":[{"type":7}],"index":1,"name":"Err"}]}},"params":[{"name":"T","type":9},{"name":"E","type":7}],"path":["Result"]}},{"id":9,"type":{"def":{"tuple":[4,4]}}},{"id":10,"type":{"def":{"variant":{"variants":[{"fields":[{"type":11}],"index":0,"name":"Ok"},{"fields":[{"type":7}],"index":1,"name":"Err"}]}},"params":[{"name":"T","type":11},{"name":"E","type":7}],"path":["Result"]}},{"id":11,"type":{"def":{"tuple":[0,0,3]}}},{"id":12,"type":{"def":{"composite":{"fields":[{"type":1,"typeName":"[u8; 32]"}]}},"path":["ink_primitives","types","Hash"]}},{"id":13,"type":{"def":{"primitive":"u64"}}},{"id":14,"type":{"def":{"primitive":"u32"}}},{"id":15,"type":{"def":{"variant":{}},"path":["ink_env","types","NoChainExtension"]}}],"version":"4"}; // after deploy
const WS_PROVIDER = 'wss://rpc.polkadot.io'; // or 'wss://westend-rpc.polkadot.io' if you used Westend

export async function connectToContract() {
  await web3Enable('Polkadot Freelance');
  const allAccounts = await web3Accounts();
  const account = allAccounts[0]; // assuming first one for demo

  const provider = new WsProvider(WS_PROVIDER);
  const api = await ApiPromise.create({ provider });

  const injector = await web3FromSource(account.meta.source);

  const contract = new api.ContractPromise(api, metadata, CONTRACT_ADDRESS);

  return { api, contract, account, injector };
}
